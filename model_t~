mdp

module battery_model

charging:[0..1] init 1;
t:[0..48] init 0;
battery:[0..100] init 100;

[gather_reward] (battery>89) & (battery<=100) & (t<48) -> (charging'=0) & (battery'=battery-4) & (t'=t+1);
[gather_reward] (battery>24) & (battery<90) & (t<48) -> (charging'=0) & (battery'=battery-5) & (t'=t+1);
[gather_reward] (battery>4) & (battery<25) & (t<48) -> (charging'=0) & (battery'=battery-4) & (t'=t+1);
[gather_reward] (battery>2) & (battery<5) & (t<48) -> (charging'=0) & (battery'=battery-3) & (t'=t+1);
[gather_reward] (battery=2) & (t<48) -> (charging'=0) & (battery'=battery-2) & (t'=t+1);
[gather_reward] (battery=1) & (t<48) -> (charging'=0) & (battery'=battery-1) & (t'=t+1);
[go_charge] (charging=0) & (battery>0) & (battery<5) & (t<48) -> (charging'=1) & (battery'=battery+6) & (t'=t+1);
[go_charge] (charging=0) & (battery>4) & (battery<9) & (t<48) -> (charging'=1) & (battery'=battery+5) & (t'=t+1);
[go_charge] (charging=0) & (battery>8) & (battery<15) & (t<48) -> (charging'=1) & (battery'=battery+4) & (t'=t+1);
[go_charge] (charging=0) & (battery>14) & (battery<29) & (t<48) -> (charging'=1) & (battery'=battery+3) & (t'=t+1);
[go_charge] (charging=0) & (battery>28) & (battery<45) & (t<48) -> (charging'=1) & (battery'=battery+2) & (t'=t+1);
[go_charge] (charging=0) & (battery>44) & (battery<65) & (t<48) -> (charging'=1) & (battery'=battery+1) & (t'=t+1);
[go_charge] (charging=0) & (battery>64) & (battery<98) & (t<48) -> (charging'=1) & (battery'=battery+2) & (t'=t+1);
[go_charge] (charging=0) & (battery=98) & (t<48) -> (charging'=1) & (battery'=battery+1) & (t'=t+1);
[go_charge] (charging=0) & (battery=99) & (t<48) -> (charging'=1) & (t'=t+1);
[go_charge] (charging=0) & (battery=100) & (t<48) -> (charging'=1) & (t'=t+1);
[stay_charging] (charging=1) & (battery>0) & (battery<5) & (t<48) -> (charging'=1) & (battery'=battery+7) & (t'=t+1);
[stay_charging] (charging=1) & (battery>4) & (battery<9) & (t<48) -> (charging'=1) & (battery'=battery+6) & (t'=t+1);
[stay_charging] (charging=1) & (battery>8) & (battery<15) & (t<48) -> (charging'=1) & (battery'=battery+5) & (t'=t+1);
[stay_charging] (charging=1) & (battery>14) & (battery<29) & (t<48) -> (charging'=1) & (battery'=battery+4) & (t'=t+1);
[stay_charging] (charging=1) & (battery>28) & (battery<45) & (t<48) -> (charging'=1) & (battery'=battery+3) & (t'=t+1);
[stay_charging] (charging=1) & (battery>44) & (battery<65) & (t<48) -> (charging'=1) & (battery'=battery+2) & (t'=t+1);
[stay_charging] (charging=1) & (battery>64) & (battery<98) & (t<48) -> (charging'=1) & (battery'=battery+3) & (t'=t+1);
[stay_charging] (charging=1) & (battery=98) & (t<48) -> (charging'=1) & (battery'=battery+2) & (t'=t+1);
[stay_charging] (charging=1) & (battery=99) & (t<48) -> (charging'=1) & (battery'=battery+1) & (t'=t+1);
[stay_charging] (charging=1) & (battery=100) & (t<48) -> (charging'=1) & (t'=t+1);
[tick] (battery=0) & (t<48) -> (t'=t+1);

endmodule


module cluster_evol

cl:[0..239];

[o] (t=0) -> 0.41:(cl'=0) + 0.34:(cl'=1) + 0.22:(cl'=2) + 0.01:(cl'=3) + 0.02:(cl'=4);
[o] (t=1) -> 0.41:(cl'=5) + 0.34:(cl'=6) + 0.22:(cl'=7) + 0.01:(cl'=8) + 0.02:(cl'=9);
[o] (t=2) -> 0.41:(cl'=10) + 0.34:(cl'=11) + 0.22:(cl'=12) + 0.01:(cl'=13) + 0.02:(cl'=14);
[o] (t=3) -> 0.41:(cl'=15) + 0.34:(cl'=16) + 0.22:(cl'=17) + 0.01:(cl'=18) + 0.02:(cl'=19);
[o] (t=4) -> 0.41:(cl'=20) + 0.34:(cl'=21) + 0.22:(cl'=22) + 0.01:(cl'=23) + 0.02:(cl'=24);
[o] (t=5) -> 0.41:(cl'=25) + 0.34:(cl'=26) + 0.22:(cl'=27) + 0.01:(cl'=28) + 0.02:(cl'=29);
[o] (t=6) -> 0.41:(cl'=30) + 0.34:(cl'=31) + 0.22:(cl'=32) + 0.01:(cl'=33) + 0.02:(cl'=34);
[o] (t=7) -> 0.41:(cl'=35) + 0.34:(cl'=36) + 0.22:(cl'=37) + 0.01:(cl'=38) + 0.02:(cl'=39);
[o] (t=8) -> 0.51:(cl'=40) + 0.24:(cl'=41) + 0.22:(cl'=42) + 0.01:(cl'=43) + 0.02:(cl'=44);
[o] (t=9) -> 0.45:(cl'=45) + 0.3:(cl'=46) + 0.22:(cl'=47) + 0.01:(cl'=48) + 0.02:(cl'=49);
[o] (t=10) -> 0.48:(cl'=50) + 0.09:(cl'=51) + 0.38:(cl'=52) + 0.04:(cl'=53) + 0.01:(cl'=54);
[o] (t=11) -> 0.57:(cl'=55) + 0.23:(cl'=56) + 0.15:(cl'=57) + 0.04:(cl'=58) + 0.01:(cl'=59);
[o] (t=12) -> 0.47:(cl'=60) + 0.13:(cl'=61) + 0.35:(cl'=62) + 0.04:(cl'=63) + 0.01:(cl'=64);
[o] (t=13) -> 0.43:(cl'=65) + 0.21:(cl'=66) + 0.26:(cl'=67) + 0.09:(cl'=68) + 0.01:(cl'=69);
[o] (t=14) -> 0.42:(cl'=70) + 0.41:(cl'=71) + 0.13:(cl'=72) + 0.04:(cl'=73) + 0.01:(cl'=74);
[o] (t=15) -> 0.42:(cl'=75) + 0.4:(cl'=76) + 0.11:(cl'=77) + 0.06:(cl'=78) + 0.01:(cl'=79);
[o] (t=16) -> 0.41:(cl'=80) + 0.4:(cl'=81) + 0.13:(cl'=82) + 0.06:(cl'=83) + 0.01:(cl'=84);
[o] (t=17) -> 0.4:(cl'=85) + 0.41:(cl'=86) + 0.13:(cl'=87) + 0.06:(cl'=88) + 0.01:(cl'=89);
[o] (t=18) -> 0.38:(cl'=90) + 0.29:(cl'=91) + 0.23:(cl'=92) + 0.06:(cl'=93) + 0.04:(cl'=94);
[o] (t=19) -> 0.39:(cl'=95) + 0.42:(cl'=96) + 0.13:(cl'=97) + 0.05:(cl'=98) + 0.02:(cl'=99);
[o] (t=20) -> 0.39:(cl'=100) + 0.42:(cl'=101) + 0.13:(cl'=102) + 0.05:(cl'=103) + 0.02:(cl'=104);
[o] (t=21) -> 0.38:(cl'=105) + 0.43:(cl'=106) + 0.11:(cl'=107) + 0.06:(cl'=108) + 0.02:(cl'=109);
[o] (t=22) -> 0.59:(cl'=110) + 0.18:(cl'=111) + 0.17:(cl'=112) + 0.04:(cl'=113) + 0.02:(cl'=114);
[o] (t=23) -> 0.6:(cl'=115) + 0.19:(cl'=116) + 0.16:(cl'=117) + 0.02:(cl'=118) + 0.03:(cl'=119);
[o] (t=24) -> 0.54:(cl'=120) + 0.25:(cl'=121) + 0.15:(cl'=122) + 0.03:(cl'=123) + 0.03:(cl'=124);
[o] (t=25) -> 0.63:(cl'=125) + 0.17:(cl'=126) + 0.15:(cl'=127) + 0.03:(cl'=128) + 0.03:(cl'=129);
[o] (t=26) -> 0.5:(cl'=130) + 0.28:(cl'=131) + 0.15:(cl'=132) + 0.04:(cl'=133) + 0.03:(cl'=134);
[o] (t=27) -> 0.53:(cl'=135) + 0.25:(cl'=136) + 0.15:(cl'=137) + 0.04:(cl'=138) + 0.03:(cl'=139);
[o] (t=28) -> 0.41:(cl'=140) + 0.33:(cl'=141) + 0.19:(cl'=142) + 0.05:(cl'=143) + 0.02:(cl'=144);
[o] (t=29) -> 0.41:(cl'=145) + 0.32:(cl'=146) + 0.2:(cl'=147) + 0.06:(cl'=148) + 0.01:(cl'=149);
[o] (t=30) -> 0.39:(cl'=150) + 0.36:(cl'=151) + 0.2:(cl'=152) + 0.04:(cl'=153) + 0.01:(cl'=154);
[o] (t=31) -> 0.57:(cl'=155) + 0.19:(cl'=156) + 0.17:(cl'=157) + 0.06:(cl'=158) + 0.01:(cl'=159);
[o] (t=32) -> 0.77:(cl'=160) + 0.09:(cl'=161) + 0.07:(cl'=162) + 0.04:(cl'=163) + 0.02:(cl'=164);
[o] (t=33) -> 0.65:(cl'=165) + 0.08:(cl'=166) + 0.2:(cl'=167) + 0.04:(cl'=168) + 0.03:(cl'=169);
[o] (t=34) -> 0.61:(cl'=170) + 0.14:(cl'=171) + 0.16:(cl'=172) + 0.06:(cl'=173) + 0.03:(cl'=174);
[o] (t=35) -> 0.63:(cl'=175) + 0.13:(cl'=176) + 0.16:(cl'=177) + 0.06:(cl'=178) + 0.03:(cl'=179);
[o] (t=36) -> 0.67:(cl'=180) + 0.09:(cl'=181) + 0.18:(cl'=182) + 0.04:(cl'=183) + 0.02:(cl'=184);
[o] (t=37) -> 0.7:(cl'=185) + 0.13:(cl'=186) + 0.11:(cl'=187) + 0.04:(cl'=188) + 0.02:(cl'=189);
[o] (t=38) -> 0.72:(cl'=190) + 0.1:(cl'=191) + 0.13:(cl'=192) + 0.03:(cl'=193) + 0.02:(cl'=194);
[o] (t=39) -> 0.7:(cl'=195) + 0.08:(cl'=196) + 0.17:(cl'=197) + 0.03:(cl'=198) + 0.02:(cl'=199);
[o] (t=40) -> 0.73:(cl'=200) + 0.04:(cl'=201) + 0.15:(cl'=202) + 0.06:(cl'=203) + 0.02:(cl'=204);
[o] (t=41) -> 0.49:(cl'=205) + 0.26:(cl'=206) + 0.18:(cl'=207) + 0.06:(cl'=208) + 0.01:(cl'=209);
[o] (t=42) -> 0.39:(cl'=210) + 0.36:(cl'=211) + 0.22:(cl'=212) + 0.02:(cl'=213) + 0.01:(cl'=214);
[o] (t=43) -> 0.39:(cl'=215) + 0.36:(cl'=216) + 0.22:(cl'=217) + 0.02:(cl'=218) + 0.01:(cl'=219);
[o] (t=44) -> 0.4:(cl'=220) + 0.36:(cl'=221) + 0.22:(cl'=222) + 0.01:(cl'=223) + 0.01:(cl'=224);
[o] (t=45) -> 0.96:(cl'=225) + 0.01:(cl'=226) + 0.01:(cl'=227) + 0.01:(cl'=228) + 0.01:(cl'=229);
[o] (t=46) -> 0.38:(cl'=230) + 0.36:(cl'=231) + 0.23:(cl'=232) + 0.01:(cl'=233) + 0.02:(cl'=234);
[o] (t=47) -> 0.39:(cl'=235) + 0.36:(cl'=236) + 0.22:(cl'=237) + 0.01:(cl'=238) + 0.02:(cl'=239);

endmodule


module observation

observed:[0..1] init 0;

[o] (observed=0) -> (observed'=1);
[gather_reward] (observed=1) -> (observed'=0);
[stay_charging] (observed=1) -> (observed'=0);
[go_charge] (observed=1) -> (observed'=0);

endmodule


