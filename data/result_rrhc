PRISM
=====

Version: 4.4.beta
Date: Mon Feb 26 11:57:03 AST 2018
Hostname: milanmt-Satellite-L755
Memory limits: cudd=1g, java(heap)=910.5m
Command line: prism /home/milan/workspace/strands_ws/src/battery_scheduler/models/rrhc.prism /home/milan/workspace/strands_ws/src/battery_scheduler/models/model_prop.props -exportadv /home/milan/workspace/strands_ws/src/battery_scheduler/models/rrhc.adv -exportprodstates /home/milan/workspace/strands_ws/src/battery_scheduler/models/rrhc.sta -exporttarget /home/milan/workspace/strands_ws/src/battery_scheduler/models/rrhc.lab

Parsing model file "/home/milan/workspace/strands_ws/src/battery_scheduler/models/rrhc.prism"...

Parsing properties file "/home/milan/workspace/strands_ws/src/battery_scheduler/models/model_prop.props"...

1 property:
(1) multi(Pmax=? [ G (battery>30) ], R{"rew"}max=? [ C ])

Type:        MDP
Modules:     time_model battery_model charging_state cluster_evolution 
Variables:   t battery charging cl 

---------------------------------------------------------------------

Model checking: multi(Pmax=? [ G (battery>30) ], R{"rew"}max=? [ C ])

Building model...

Computing reachable states...

Reachability (BFS): 49 iterations in 0.07 seconds (average 0.001388, setup 0.00)

Time for model construction: 1.06 seconds.

Warning: Deadlocks detected and fixed in 168 states

Type:        MDP
States:      6674 (1 initial)
Transitions: 13146
Choices:     13138

Transition matrix: 18285 nodes (10 terminal), 13146 minterms, vars: 20r/20c/5nd
Switching engine since only sparse engine currently supports this computation...

Warning: Disabling Prob1 since this is needed for adversary generation

Building deterministic Rabin automaton (for G "L0")...
Taking DRA from library...
DRA has 2 states, 1 Rabin pairs.Time for Rabin translation: 0.018 seconds.

Constructing MDP-DRA product...

Reachability (BFS): 49 iterations in 0.08 seconds (average 0.001694, setup 0.00)
States:      10780 (1 initial)
Transitions: 21246
Choices:     21238

Transition matrix: 23421 nodes (10 terminal), 21246 minterms, vars: 21r/21c/5nd
Total time for product construction: 0.171 seconds.

States:      10780 (1 initial)
Transitions: 21246
Choices:     21238

Transition matrix: 23421 nodes (10 terminal), 21246 minterms, vars: 21r/21c/5nd

Exporting product state space to file "/home/milan/workspace/strands_ws/src/battery_scheduler/models/rrhc.sta"...

Finding accepting end components for G (battery>30)...
Time for end component identification: 0.004 seconds.

Exporting target states info to file "/home/milan/workspace/strands_ws/src/battery_scheduler/models/rrhc.lab"...
Prob0A: 49 iterations in 0.05 seconds (average 0.001082, setup 0.00)

yes = 112, no = 0, maybe = 10668

Computing remaining probabilities...
Switching engine since only sparse engine currently supports this computation...
Engine: Sparse
Optimising weighted sum for probability objective 1/1: weights (1.0, 0.0)
Iterative method: 50 iterations in 0.06 seconds (average 0.001080, setup 0.00)
Optimal value for weights [1.000000,0.000000] from initial state: 1.000000

Adversary written to file "/home/milan/workspace/strands_ws/src/battery_scheduler/models/rrhcpre1.adv".
Computed point: (1.0, 3773.1833333316)
Optimising weighted sum for reward objective 1/1: weights (0.0, 1.0)
Iterative method: 50 iterations in 0.05 seconds (average 0.000980, setup 0.00)
Optimal value for weights [0.000000,1.000000] from initial state: 3898.441667

Adversary written to file "/home/milan/workspace/strands_ws/src/battery_scheduler/models/rrhcpre2.adv".
Computed point: (0.0, 3898.4416666649995)
=====================================================================
Optimising weighted sum of objectives: weights (0.9920797307108483, 0.007920269289151674)
Iterative method: 50 iterations in 0.05 seconds (average 0.000960, setup 0.00)
Optimal value for weights [0.992080,0.007920] from initial state: 30.876708

Adversary written to file "/home/milan/workspace/strands_ws/src/battery_scheduler/models/rrhc1.adv".
Computed point: (0.0, 3898.4416666649995)
The value iteration(s) took 0.229 seconds altogether.
Number of weight vectors used: 2
Multi-objective value iterations took 0.229 s.

Value in the initial state: [(1.0, 3773.1833333316), (0.0, 3898.4416666649995)]

Time for model checking: 1.133 seconds.

Result: [(1.0, 3773.1833333316), (0.0, 3898.4416666649995)] (value in the initial state)

---------------------------------------------------------------------

Note: There were 2 warnings during computation.

